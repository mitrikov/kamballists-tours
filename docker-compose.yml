version: '3.5'
services:
    #Nginx Service
    tours-nginx:
        image: nginx:alpine
        build:
            context: ./docker/nginx/
            dockerfile: ./Dockerfile
        container_name: tours-nginx
        restart: unless-stopped
        tty: true
        volumes:
            - ./backend:/var/www/backend:ro,cached
            - ./docker/nginx/app.conf:/etc/nginx/conf.d/default.conf
        depends_on:
            - tours-backend
        ports:
            - "8088:80"
            - "4433:443"
        networks:
            - tours-network

    #PHP Laravel Service
    tours-backend:
        image: tours-backend
        build:
            context: .
            dockerfile: ./backend/Dockerfile
        container_name: tours-backend
        restart: unless-stopped
        tty: true
        environment:
            SERVICE_NAME: tours-backend
            SERVICE_TAGS: dev
        depends_on:
            - tours-mongo
        volumes:
            - ./backend/.env.production:/var/www/backend/.env
        networks:
            - tours-network

    #mongo
    tours-mongo:
        container_name: tours-mongo
        #:4.4.6
        image: mongo
        restart: always
        volumes:
          - ./db/init-mongo.sh:/docker-entrypoint-initdb.d/init-mongo.sh  # mongo < 6
          - ./db/mongo-volume:/data/db
        ports:
            - '27017:27017'
        expose:
          - '27017'
        env_file:
          - ./db/.env.production
        networks:
            - tours-network

    tours-frontend:
        container_name: tours-frontend
        image: tours-frontend
        build:
          context: ./frontend
          dockerfile: ./Dockerfile
        volumes:
          - /node_modules
        restart: unless-stopped
        env_file:
          - ./frontend/.env.production
        networks:
            - tours-network
    
    #tours-ml:
    #    container_name: tours-ml
    #    build:
    #        context: ./ml
    #        dockerfile: ./Dockerfile
    #    restart: unless-stopped
    #    networks:
    #        - tours-network
#Docker Networks
networks:
    tours-network:
        driver: bridge
